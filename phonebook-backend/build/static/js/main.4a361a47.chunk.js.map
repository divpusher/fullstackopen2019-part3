{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","newFilter","onChange","handleFilterChange","PersonForm","onSubmit","handleSubmit","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","persons","filter","handleDeletePerson","rowsToShow","item","name","toLowerCase","indexOf","map","person","key","id","number","onClick","Notification","message","text","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","useEffect","personService","initialPersons","event","target","toString","preventDefault","dupePerson","find","elem","window","confirm","returnedPerson","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a361a47.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => (\r\n    <div>filter shown with <input      \r\n        value={props.newFilter} \r\n        onChange={props.handleFilterChange}  \r\n        />\r\n    </div>\r\n)\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        name: <input \r\n          value={props.newName} \r\n          onChange={props.handleNameChange} \r\n          />\r\n      </div>\r\n      <div>\r\n        number: <input \r\n          value={props.newNumber} \r\n          onChange={props.handleNumberChange} \r\n          />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n)\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({ persons, filter, handleDeletePerson }) => {    \r\n\r\n  const rowsToShow = filter\r\n    ? persons.filter(\r\n        (item) => {\r\n          return item.name.toLowerCase().indexOf(filter) > -1\r\n        })\r\n    : persons\r\n\r\n  const rows = () => rowsToShow.map(person => \r\n    <div key={person.id}>{person.name} {person.number} \r\n      <button \r\n        onClick={() => handleDeletePerson(person.id, person.name)}\r\n      >delete</button>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div>{rows()}</div>\r\n  )\r\n  \r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (!message.text) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={message.type}>\r\n      {message.text}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\n\nconst App = () => {\n\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ message, setMessage] = useState({ text: '', type: '' })\n\n\n  useEffect(() => {     \n    personService\n      .getAll()\n      .then(initialPersons => {        \n        setPersons(initialPersons)      \n      })\n  }, [])  \n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    let dupePerson = persons.find((elem) => elem.name === newName)\n\n    if(dupePerson\n      && window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n    ){\n      \n      dupePerson.number = newNumber\n\n      personService\n        .update(dupePerson.id, dupePerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== dupePerson.id ? person : returnedPerson))\n\n          setMessage({\n            text: `${newName} was updated`,\n            type: 'success'\n          })\n          setTimeout(() => {          \n            setMessage({ text: '', type: '' })        \n          }, 3000)\n\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {      \n          setMessage({\n            text: `Information of ${newName} has already been removed from server`,\n            type: 'error'\n          })\n\n          setTimeout(() => {          \n            setMessage({ text: '', type: '' })\n          }, 3000)\n        })\n\n      return\n\n    }else if(dupePerson){\n      return\n    }\n\n\n    const nameObject = {\n      name: newName,\n      number: newNumber \n    }\n\n    personService\n      .create(nameObject)\n      .then(returnedPerson => {        \n        setPersons(persons.concat(returnedPerson))\n\n        setMessage({\n          text: `Added ${newName}`,\n          type: 'success'\n        })\n        setTimeout(() => {          \n          setMessage({ text: '', type: '' })        \n        }, 5000)\n\n        setNewName('')\n        setNewNumber('')\n      })\n  }\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value.toString().toLowerCase())\n  }\n\n  const handleDeletePerson = (id, name) => {\n    if(window.confirm(`Delete ${name}?`)) {       \n      personService\n      .remove(id)\n      .then(response => {\n        setPersons(persons.filter(person => person.id !== id && person))\n      })\n      .catch(error => {      \n        setMessage({\n          text: `Information of ${newName} has already been removed from server`,\n          type: 'error'\n        })\n\n        setTimeout(() => {          \n          setMessage({ text: '', type: '' })\n        }, 3000)\n      })\n    }\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={message} />\n\n      <Filter \n        handleFilterChange={handleFilterChange} \n        newFilter={newFilter} \n      />\n      \n      <h2>Add a new</h2>\n      <PersonForm \n        handleSubmit={addPerson} \n        handleNameChange={handleNameChange} \n        newName={newName} \n        handleNumberChange={handleNumberChange} \n        newNumber={newNumber} \n      />\n      \n      <h2>Numbers</h2>\n      <Persons \n        persons={persons} \n        filter={newFilter} \n        handleDeletePerson={handleDeletePerson}\n      />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}